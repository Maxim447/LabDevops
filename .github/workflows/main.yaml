name: Echo-Bot

on:
  push:
    branches: [ "main" ]
    
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
        
      - name: Build with Gradle
        run: gradle build -x test 
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Echo-Bot
          path: build/libs
          
          
  send:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Echo-Bot
          path: build/libs
        
      - name: Upload to google drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.CREDENTIALS }}
          filename: build/libs/LabDevops-0.0.1-SNAPSHOT.jar
          folderId: ${{ secrets.FOLDER_ID }}
          overwrite: "true"
  
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bot:latest
          
      - name: Deploy to Self-Hosted Agent
        run: |
          docker stop my-app-container || true
          docker rm my-app-container || true
          docker pull ${{ secrets.DOCKER_USERNAME }}/bot:latest
          docker run -d --name my-app-container \
          -e "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" \
          -e "BOT_NAME=${{ secrets.BOT_NAME }}" \
          my-bot
  
